options:

	#MESSAGES
	prefix: &6&lTNT TAG &8&l» &7
	version: v.0.0.6b
	
	#%size of {tnt::arena::%{_arena}%::ninjas::*}% = current players, %{tnt::arena::%{_arena}%::max}% = max arena players.
	join: &a%{_p}'s display name% &ehas joined to the game &e(&b%size of {tnt::arena::%{_arena}%::ninjas::*}%&e/&b%{tnt::arena::%{_arena}%::max}%&e).
	leave: &7%{_p}'s display name% &ehas left the game.
	starting: &eStarting in &6%{tnt::arena::%{_arena}%::seconds}% &eseconds
	in-game: &cYou are in game.
	not-in-game: &cYou are not in game.
	pass-tnt: &7%{_p}'s display name% &7is IT!
	death: &7%{_p}'s display name% &eblew up!
	game-full: &7This arena is full.
	game-running: &7This game already started.
	not-exist: &7This arena not exists.
	summary: "&a-------------------------------------", "", "&e&lTNTTag", "", "&e1st Place: - &7%{_place.1}%", "&e2nd Place: - &7%{_place.2}%", "&e3rd Place: - &7%{_place.3}%", "" and "&a-------------------------------------"
	start-round: "", "&f&lRound %{tnt::arena::%{_arena}%::round}% Has Started!", "&eThe TNT has been released to &7%{tnt::arena::%{_arena}%::exploding-ninjas::*}%", "" and "%{_run-or-tag}%"
	tag: &cYou START as IT! Tag Someone
	run: &aYou did NOT start as IT! Run away!
	tag-player: &aYou tagged %victim's display name%
	get-tagged: %attacker's display name% &cTagged you!
	second: second
	seconds: seconds

	#SCOREBOARD
	target-tag: &cTag Someone!
	target-run: &aRun away!
	website: &eMC.SERVER.NET
	
	#SETTINGS
	chat-format: &7%player's display name% &8&l» &7%message%
	lobby-time: 30
	action-bar-tag: &cYou're IT, &ctag Someone! &7(&aNearest player %{_closest}%m&7)
	action-bar-run: &aRun away!
	
	leave-slot: 8
	leave-item: magma cream
	leave-name: &cLeave the game.

	teleporter-slot: 0
	teleporter-item: compass
	teleporter-name: &aPlayer Teleporter

	#MENUS
	arena-list: &8&l» &e&nTNT Tag - Arenas
	player-teleporter: &8&l» &7Player Teleporter

	#TITLES
	death-title: &c&lBOOM
	death-subtitle: &7&nYou are eliminated!

	game-start-title: &eGame Starts in &a%{tnt::arena::%{_arena}%::seconds}%
	game-start-subtitle: &e%{_time}%

	#SIGN

	line-1: &8» &7Arena: &b%{_arena}% &8«
	line-2: &8» &a%{tnt::arena::%{_arena}%::status}% &8«
	line-3: &8» &7Playing &3%size of {tnt::arena::%{_arena}%::ninjas::*}%&7/&3%{tnt::arena::%{_arena}%::max}% &8«
	line-4:	&e	 



#
#CODE
#
import:			
	org.bukkit.Bukkit
	fr.mrmicky.fastparticle.FastParticle
	fr.mrmicky.fastparticle.ParticleType	

local effect [leaf] send title %string% with subtitle %string% to %players% with %number% fadein and %number% fadeout for %number%:		
	trigger:
		loop exprs-3:
			{tnt::cache::TitleManager}.sendTitle(loop-value-1, expr-1, expr-4, expr-5 and expr-6)
			{tnt::cache::TitleManager}.sendSubtitle(loop-value-1 and expr-2)

local effect [leaf] send action[ ]bar %string% to %players%:		
	trigger:
		loop exprs-2:
			{tnt::cache::TitleManager}.sendActionbar(loop-value-1 and expr-1)
			
local effect create scoreboard for %player%:	
	trigger:
		if {tnt::cache::TitleManager}.hasScoreboard(expr-1) is true:
			{tnt::cache::TitleManager}.removeScoreboard(expr-1)
		{tnt::cache::TitleManager}.giveScoreboard(expr-1)

local effect delete scoreboard of %player%:	
	trigger:
		{tnt::cache::TitleManager}.removeScoreboard(expr-1)	

local effect set scoreboard title of %player% to %string%:	
	trigger:
		{tnt::cache::TitleManager}.setScoreboardTitle(expr-1 and expr-2)

local effect set scoreboard line %number% of %player% to %string%:	
	trigger:
		{tnt::cache::TitleManager}.setScoreboardValue(expr-2, expr-1 and expr-3)


command tnttag [<text = help>] [<text>] [<text>]:
	aliases: tnt
	executable by: players
	trigger:
		if arg-1 is "help" or "createarena" or "SetSpawn" or "join" or "leave" or "setlobby" or "deleteArena" or "list" or "autojoin" or "savearena" or "autojoin" or "stats" or "SetArenaLobby" or "start" or "reload" or "SetMin" or "SetMax" or "SetSpawn" or "SetMapName":
			if player have permission "tnt.player":
				if arg 1 is "help":
					send "&7&l------------&8[ &6&lTNT Tag &8]&7&l------------"
					send "&7/tnt list"
					send "&7/tnt join &8(&7arena_name&8)"
					send "&7/tnt autojoin"
					send "&7/tnt leave"
					if player have permission "tnt.admin":
						send "&7/tnt Start"				
						send "&7/tnt ResetStats &8(&7player_name&8)"				
						send "&7/tnt SetLobby"
						send "&7/tnt CreateArena &8(&7arena_name&8)"			
						send "&7/tnt SetArenaLobby &8(&7arena_name&8)"	
						send "&7/tnt SetMin &8(&7arena_name&8)"	
						send "&7/tnt SetMax &8(&7arena_name&8)"		
						send "&7/tnt SetSpawn &8(&7arena_name&8)"			
						send "&7/tnt SetMapName &8(&7arena_name&8)"						
						send "&7/tnt SaveArena &8(&7arena_name&8)"							
						send "&7/tnt DeleteArena &8(&7arena_name&8)"					
						send "&7&l----------------------------------------"
					else:
						send "&7&l----------------------------------------"
				if arg 1 is "join":		
					tnt_join(player, arg-2)
				if arg 1 is "list":		
					if {tnt::player::%player%::state} is not set:	
						open chest inventory with 6 rows named "{@arena-list}" to player	
						set {_slot} to 10							
						loop {tnt::arenas::*}:
							set {_item} to green clay named "&8» &7Arena: &e%loop-value%"
							set line 1 of {_item}'s lore to "&8▪ &7Map: &e%{tnt::arena::%loop-value%::map}%"	
							set line 2 of {_item}'s lore to "&8▪ &7Status: &e%{tnt::arena::%loop-value%::status}%"								
							set line 3 of {_item}'s lore to "&8▪ &7Playing: &e%size of {bg::arena::%loop-value%::cache::ninjas::*}%"	
							make a gui slot {_slot} of player with {_item} to run function tnt_join(player, loop-value-1)
							add 1 to {_slot}
							if {_slot} is 17 or 26 or 35:
								add 2 to {_slot}
						while name of player's current inventory is "{@arena-list}":
							loop  0, 1, 2, 3, 4 ,5, 6, 7, 8, 17, 26, 35, 44, 43, 42, 41, 40, 39, 38, 37, 36, 27, 18 and 9:
								make a gui slot loop-value-1 of player with black glass named "&7Hi, &e&n%player's display name%&r &7OwO" to do nothing
								wait a tick				
								make a gui slot loop-value-1 of player with air to do nothing														
				if arg 1 is "leave":	
					tnt_leave(player)
				if arg 1 is "autojoin":		
					if {tnt::player::%player%::state} is not set:
						loop {tnt::arenas::*}:
							if {tnt::arena::%loop-value%::status} is "WAITING" or "STARTING":
								tnt_join(player, loop-value)
								stop
				if arg-1 is "stats":
					send "&e&l✦&7&l&m--------------------------------------&e&l✦"
					send ""
					send "&8&l»          &6&lTNT Tag STATS        &8&l«"		
					send ""				
					send "&6&l» &7&lWins &c%{tnt::stats::wins::%uuid of player%}%"	
					send "&6&l» &7&lLoses &c%{tnt::stats::loses::%uuid of player%}%"				
					send ""
					send "&e&l✦&7&l&m--------------------------------------&e&l✦"
				if arg 1 is "createarena":	
					if player has permission "tnt.admin":		
						if arg-2 is set:
							if {tnt::arena::%arg-2%::state} is not set:
								set {tnt::arena::%arg-2%::state} to "setup"
								send "{@prefix}&aArena &c%arg-2% &ahas been created!"
							else:
								send "{@prefix}&aThis arena already exists!"	
						else:
							send "{@prefix}&aSpecify Arena!"				
				if arg 1 is "SetArenaLobby" or "SetMax" or "SetMin" or "SetSpawn" or "SetMapName":
					if player has permission "tnt.admin":	
						if {tnt::arena::%arg-2%::state} is "setup" or "ready":
							if arg 1 is "SetArenaLobby":
								set {tnt::arena::%arg-2%::lobby} to location of player
								send "{@prefix}&aLobby for Arena &3%arg-2% &ahas been set!"
							if arg 1 is "SetMax":
								set {tnt::arena::%arg-2%::max} to arg-3 parsed as number
								send "{@prefix}&aMaximum players for Arena &3%arg-2% &ahas been set!"	
							if arg 1 is "SetMapName":
								set {tnt::arena::%arg-2%::map} to arg-3
								send "{@prefix}&aMap Name for Arena &3%arg-2% &ahas been set!"								
							if arg 1 is "SetMin":
								set {tnt::arena::%arg-2%::min} to arg-3 parsed as number
								send "{@prefix}&aMinimum players for Arena &3%arg-2% &ahas been set!"							
							if arg 1 is "SetSpawn":
								set {tnt::arena::%arg-2%::spawn} to location of player
								send "{@prefix}&aSpawn for Arena &3%arg-2% &ahas been set!"							
						else:
							send "{@prefix}&aThis arena not exists"											
				if arg 1 is "setlobby":	
					if player has permission "tnt.admin":
						set {tnt::lobby} to location of player
						send "{@prefix}&aLobby set."										
				if arg 1 is "resetstats":	
					if player has permission "tnt.admin":		
						set {_p} to arg-2 parsed as player
						tnt_stats("reset", {_p})
						send "{@prefix}&cReseted Stats for &a%{_p}%"						
				if arg 1 is "start":
					if player has permission "tnt.admin":
						size of {tnt::arena::%{tnt::player::%player%::arena}%::ninjas::*} > 1
						tnt_start({tnt::player::%player%::arena})
				if arg 1 is "reload":		
					if player has permission "tnt.admin":
						broadcast "{@prefix}&aReloading..."
						make console execute command "sk reload %script%"
				if arg 1 is "savearena":	
					if player has permission "tnt.admin":		
						if {tnt::arena::%arg-2%::state} is "setup":
							if {tnt::arena::%arg-2%::lobby} is set:						
								if {tnt::arena::%arg-2%::spawn} is set:	
									if {tnt::arena::%arg-2%::max} is set:	
										if {tnt::arena::%arg-2%::min} is set:	
											if {tnt::arena::%arg-2%::map} is set:	
												set {tnt::arena::%arg-2%::state} to "ready"
												add arg-2 to {tnt::arenas::*}
												send "{@prefix}&aArena &c%arg-2% &ahas been saved."
												tnt_resetarena(arg-2)
											else:
												send "{@prefix}&aMap name is not set!"											
										else:
											send "{@prefix}&aMinimum players is not set!"											
									else:
										send "{@prefix}&aMaximum players is not set!"									
								else:
									send "{@prefix}&aArena spawn is not set!"																																										
							else:
								send "{@prefix}&aLobby is not set!"						
						else:
							send "{@prefix}&aThis arena not exists"
				if arg 1 is "deletearena":	
					if player has permission "tnt.admin":		
						if {tnt::arena::%arg-2%::state} is set:
							tnt_resetarena(arg-2)
							delete {tnt::arena::%arg-2%::*}
							remove arg-2 from {tnt::arenas::*}
							send "{@prefix}&aArena &c%arg-2% &ahas been deleted."
						else:
							send "{@prefix}&aThis arena not exists"

on chat:
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		cancel event		
		send "{@chat-format}" to {tnt::arena::%{tnt::player::%player%::arena}%::ninjas::*} and {tnt::arena::%{tnt::player::%player%::arena}%::bad-ninjas::*}

on drop:
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		cancel event
					
on hunger bar change:	
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		set player's hunger to 20
		
on damage of player:
	if {tnt::player::%victim%::state} is "IN-GAME":
		if {tnt::arena::%{tnt::player::%victim%::arena}%::status} is "STARTING" or "WAITING":
			cancel event
			damage cause is void
			teleport victim to {tnt::arena::%{tnt::player::%victim%::arena}%::lobby}
		if {tnt::arena::%{tnt::player::%victim%::arena}%::status} is "IN-GAME":
			heal victim
			attacker is player:
				if {tnt::player::%attacker%::has-tnt} is set:
					tnt_set({tnt::player::%victim%::arena}, victim)
					delete {tnt::player::%attacker%::has-tnt}
					remove attacker from {tnt::arena::%{tnt::player::%victim%::arena}%::exploding-ninjas::*}
					clear attacker's inventory
					loop ...attacker.getActivePotionEffects():
						attacker.removePotionEffect(loop-value.getType())	
					apply potion of speed 2 without any particles to attacker for 7 days
					launch "CREEPER" firework at block above victim timed 0 coloured "GREEN"
					send "{@get-tagged}" to victim
					send "{@tag-player}" to attacker	
			else:
				cancel event
	if {tnt::player::%victim%::state} is "IN-GAME-SPEC":
		cancel event
	if {tnt::player::%attacker%::state} is "IN-GAME-SPEC":
		cancel event
		
function tnt_check_win(arena: text):
	size of {tnt::arena::%{_arena}%::ninjas::*} is 1
	tnt_set_arena_status({_arena}, "WAITING")
	loop "1", "2" and "3":
		if {tnt::arena::%{_arena}%::summary::%loop-value-1%} is set:	
			set {_place.%loop-value%} to "%{tnt::arena::%{_arena}%::summary::%loop-value-1%}%"
		else:	
			set {_place.%loop-value%} to "&7Loading..."
	loop {tnt::arena::%{_arena}%::ninjas::*}:
		set {_p} to loop-value-1
	set {_place.1} to "%{_p}%"			
	send message centered {@summary} to {tnt::arena::%{_arena}%::ninjas::*} and {tnt::arena::%{_arena}%::bad-ninjas::*}				
	set {_uuid} to uuid of {_p}
	add 1 to {tnt::stats::wins::%{_uuid}%}
	loop 10 times:
		launch "BALL" firework at location of {_p} timed 1 coloured "RED" and "BLUE" AND "YELLOW" AND "GREEN"
		wait a second	
	tnt_resetarena({_arena})	
						
function tnt_remove(p: player, arena: text):
	remove {_p} from {tnt::arena::%{_arena}%::ninjas::*}
	if {tnt::arena::%{_arena}%::status} is "IN-GAME":	
		tnt_check_win({_arena})
			
on load:
	delete {tnt::player::*}
	send "&7&l--------------------------------------------" to console
	send " " to console
	send "{@prefix}&aLoading &e{@version}&a..." to console
	broadcast "{@prefix}&aPlugin loaded!"
	send " " to console
	send "&7&l--------------------------------------------" to console
	#Fixing old arenas...
	if {tnt.arenas::*} is set:
		broadcast "&aUpdating old arenas..."
		loop {tnt.arenas::*}:
			if {tnt.arena.%loop-value-1%.state} is set:
				set {tnt::arena::%loop-value-1%::state} to {tnt.arena.%loop-value-1%.state}
				set {tnt::arena::%loop-value-1%::lobby} to {tnt.arena.%loop-value-1%.lobby}					
				set {tnt::arena::%loop-value-1%::spawn} to {tnt.arena.%loop-value-1%.spawn}
				set {tnt::arena::%loop-value-1%::max} to {tnt.arena.%loop-value-1%.max}
				set {tnt::arena::%loop-value-1%::min} to {tnt.arena.%loop-value-1%.min}	
				set {tnt::arena::%loop-value-1%::map} to {tnt.arena.%loop-value-1%.map}	
				add loop-value-1 to {tnt::arenas::*}
				broadcast "&aUpdated arena &e%loop-value-1%"
		delete {tnt.arenas::*}
	#Fixing old arenas...
	loop {tnt::arenas::*}:
		delete {tnt::arena::%loop-value-1%::ninjas::*} and {tnt::arena::%loop-value-1%::bad-ninjas::*}
		tnt_resetarena(loop-value)
	set {tnt::cache::TitleManager} to Bukkit.getServer().getPluginManager().getPlugin("TitleManager")	
			

on unload:
	send "&7&l--------------------------------------------" to console
	send " " to console
	send "{@prefix}&aDisabling &e{@version}&a..." to console
	send "{@prefix}&e{@version} &adisabled!" to console
	send " " to console
	send "&7&l--------------------------------------------" to console

function tnt_stats(do: text, p: player):
	set {_uuid} to uuid of {_p}
	{_do} is "check":
		loop "loses" and "wins":
			{tnt::stats::%loop-value%::%{_uuid}%} is not set
			set {tnt::stats::%loop-value%::%{_uuid}%} to 0
	{_do} is "reset":
		loop "loses" and "wins":
			set {tnt::stats::%loop-value%::%{_uuid}%} to 0	
	
function tnt_leave(p: player):
	if {tnt::player::%{_p}%::state} is "IN-GAME" or "IN-GAME-SPEC":
		set {_arena} to {tnt::player::%{_p}%::arena}
		if {tnt::player::%{_p}%::state} is "IN-GAME":
			tnt_remove({_p}, {tnt::player::%{_p}%::arena})
			send "{@prefix}{@leave}" to {tnt::arena::%{_arena}%::ninjas::*}	
			loop {tnt::arena::%{_arena}%::ninjas::*}:
				size of {tnt::arena::%{_arena}%::ninjas::*} = 4 or 3 or 2 or 1:
					set {_size} to size of {tnt::arena::%{_arena}%::ninjas::*}
					set {tnt::arena::%{_arena}%::summary::%{_size}%} to loop-value-2		
			tnt_check_win({tnt::player::%{_p}%::arena})	
		if {tnt::player::%{_p}%::state} is "IN-GAME-SPEC":
			remove {_p} from {tnt::arena::%{_arena}%::bad-ninjas::*}
		tnt_clear_player({_p})
		delete scoreboard of {_p}
		tnt_update_sign({_arena})
		loop "arena" and "state" and "has-tnt":
			delete {tnt::player::%{_p}%::%loop-value%}				
		teleport {_p} to {tnt::lobby}
	else:
		send "{@prefix}{@not-in-game}" to {_p}
		
function tnt_join(p: player, arena: text):	
	if {tnt::player::%{_p}%::state} is not set:
		if {tnt::arena::%{_arena}%::state} is "ready":
			if {tnt::arena::%{_arena}%::status} is "WAITING" or "STARTING":
				if size of {tnt::arena::%{_arena}%::ninjas::*} < {tnt::arena::%{_arena}%::max}:
					tnt_clear_player({_p})
					set {tnt::player::%{_p}%::state} to "IN-GAME"
					set {tnt::player::%{_p}%::arena} to {_arena}
					set slot {@leave-slot} of {_p} to {@leave-item} named "{@leave-name}"
					add {_p} to {tnt::arena::%{_arena}%::ninjas::*}	
					tnt_update_sign({_arena})	
					if size of {tnt::arena::%{_arena}%::ninjas::*} = 2:
						tnt_start_countdown({_arena})											
					send "{@prefix}{@join}" to {tnt::arena::%{_arena}%::ninjas::*}
					teleport {_p} to {tnt::arena::%{_arena}%::lobby}
					tnt_createBoard({_p}, "TNT-WAITING", 10)
				else:
					tnt_setspec({_p}, false)
					add {_p} to {tnt::arena::%{_arena}%::bad-ninjas::*}
					teleport {_p} to a random element out of {tnt::arena::%{_arena}%::bad-ninjas::*}
					send "{@prefix}{@game-full}" to {_p}
			else:
				send "{@prefix}{@game-running}" to {_p}
		else:
			send "{@prefix}{@not-exist}" to {_p}
	else:
		send "{@prefix}{@in-game}" to {_p}
					
on join:
	tnt_stats("check", player)
		
on right click:
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		name of event-item is "{@leave-name}" or "{@teleporter-name}":
			cancel event
		name of event-item is "{@leave-name}":	
			tnt_leave(player)
		name of event-item is "{@teleporter-name}":
			open chest inventory with 6 rows named "{@player-teleporter}" to player	
			set {_slot} to 0
			loop {tnt::arena::%{tnt::player::%player%::arena}%::ninjas::*}:
				set {_target} to loop-value-1
				make a gui slot {_slot}-1 of player with skull of loop-value named "&e%loop-value%" to run:
					teleport player to {_target}
				add 1 to {_slot}			
		
on quit:
	tnt_leave(player)

on break:
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		cancel event
	
on place:
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		cancel event
		
on inventory click:	
	if {tnt::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
		cancel event
		
function tnt_start_round(arena: text):
	set {tnt::arena::%{_arena}%::explode} to 55
	tnt_timer({_arena})
	size of {tnt::arena::%{_arena}%::ninjas::*} > 4:
		set {_total} to size of {tnt::arena::%{_arena}%::ninjas::*}
		set {_r} to rounded {_total} * 20/100
		set {_backup::*} to {tnt::arena::%{_arena}%::ninjas::*}
		loop {_r} times:
			set {_p} to a random element out of {_backup::*}
			remove {_p} from {_backup::*}
			tnt_set({_arena}, {_p})
	else:
		tnt_set({_arena}, random element out of {tnt::arena::%{_arena}%::ninjas::*})
	loop {tnt::arena::%{_arena}%::ninjas::*}:
		if {tnt::player::%loop-value-1%::has-tnt} is set:
			set {_run-or-tag} to "{@tag}"
		else:
			set {_run-or-tag} to "{@run}"
		send message centered {@start-round} to loop-value-1		
			
function tnt_timer(arena: text):
	loop {tnt::arena::%{_arena}%::explode} times:
		if {tnt::arena::%{_arena}%::status} is "IN-GAME":
			remove 1 from {tnt::arena::%{_arena}%::explode}
			{tnt::arena::%{_arena}%::explode} = 0:
				loop {tnt::arena::%{_arena}%::exploding-ninjas::*}:
					set {_w} to world of loop-value-2
					set {_loc} to location of loop-value-2
					FastParticle.spawnParticle({_w}, ParticleType.EXPLOSION_HUGE, {_loc} and 1)
					play sound "ENTITY_GENERIC_EXPLODE" with volume 1 at loop-value-2 for loop-value-2
					size of {tnt::arena::%{_arena}%::ninjas::*} = 4 or 3 or 2 or 1: 
						set {_size} to size of {tnt::arena::%{_arena}%::ninjas::*}
						set {tnt::arena::%{_arena}%::summary::%{_size}%} to loop-value-2
					remove loop-value-2 from {tnt::arena::%{_arena}%::ninjas::*}
					remove loop-value-2 from {tnt::arena::%{_arena}%::exploding-ninjas::*}
					add loop-value-2 to {tnt::arena::%{_arena}%::bad-ninjas::*}
					set {_p} to loop-value-2
					send "{@death}" to {tnt::arena::%{_arena}%::ninjas::*} and {tnt::arena::%{_arena}%::bad-ninjas::*}
					delete {tnt::player::%loop-value-2%::has-tnt}
					add 1 to {tnt::stats::loses::%uuid of loop-value-2%}
					tnt_setspec(loop-value-2, true)
					tnt_update_sign({_arena})
					size of {tnt::arena::%{_arena}%::ninjas::*} = 1:
						tnt_check_win({_arena})
					else:
						add 1 to {tnt::arena::%{_arena}%::round}
						wait 5 seconds
						if {tnt::arena::%{_arena}%::status} is "IN-GAME":
							tnt_start_round({_arena})
		else:
			stop
		wait a second	

function tnt_set(arena: text, p: player):	
	set {_w} to world of {_p}
	if {tnt::player::%{_p}%::has-tnt} is not set:
		set {tnt::player::%{_p}%::has-tnt} to true
		add {_p} to {tnt::arena::%{_arena}%::exploding-ninjas::*}
		loop numbers between 0 and 8:
			set slot loop-number of {_p} to tnt named "&cTNT"
		set {_p}'s helmet to tnt
		apply potion of speed 4 without any particles to {_p} for 7 days
		send "{@pass-tnt}" to {tnt::arena::%{_arena}%::ninjas::*}
		while {tnt::player::%{_p}%::has-tnt} is set:
			FastParticle.spawnParticle({_w}, ParticleType.FLAME, location of {_p} and 1)
			wait a second

function tnt_setspec(p: player, title: boolean):
	tnt_clear_player({_p})
	set {tnt::player::%{_p}%::state} to "IN-GAME-SPEC"
	set {_p}'s gamemode to adventure
	set {_p}'s flight mode to true	
	apply potion of invisibility without any particles to {_p} for 7 days
	push {_p} upwards at speed 2
	apply potion of invisibility without any particles to {_p} for 7 days	
	set slot {@teleporter-slot} of {_p} to {@teleporter-item} named "{@teleporter-name}"
	set slot {@leave-slot} of {_p} to {@leave-item} named "{@leave-name}"
	if {_title} is true:
		send title "{@death-title}" with subtitle "{@death-subtitle}" to {_p} with 10 fadein and 10 fadeout for 40
				
function tnt_start(arena: text):
	set {tnt::arena::%{_arena}%::explode} to 55
	set {tnt::arena::%{_arena}%::status} to "IN-GAME"	
	set {tnt::arena::%{_arena}%::round} to 1
	loop {tnt::arena::%{_arena}%::ninjas::*}:	
		tnt_clear_player(loop-value)
		tnt_createBoard(loop-value, "TNT-GAME", 11)
		apply blindness to loop-value for 1 second
		apply potion of speed 2 without any particles to loop-value for 7 days		
		teleport loop-value-1 to {tnt::arena::%{_arena}%::spawn}
	wait a second
	if {tnt::arena::%{_arena}%::status} is "IN-GAME":
		tnt_start_round({_arena})

function tnt_update_sign(arena: text):
	set line 1 of block at {tnt::arena::%{_arena}%::sign} to "{@line-1}"
	set line 2 of block at {tnt::arena::%{_arena}%::sign} to "{@line-2}"
	set line 3 of block at {tnt::arena::%{_arena}%::sign} to "{@line-3}"
	set line 4 of block at {tnt::arena::%{_arena}%::sign} to "{@line-4}"	

function tnt_set_arena_status(arena: text, status: text):	
	set {tnt::arena::%{_arena}%::status} to {_status}
	tnt_update_sign({_arena})

function tnt_start_countdown(arena: text):
	set {tnt::arena::%{_arena}%::status} to "STARTING"
	loop {tnt::arena::%{_arena}%::seconds} times:
		if {tnt::arena::%{_arena}%::status} is "STARTING" or "WAITING":
			size of {tnt::arena::%{_arena}%::ninjas::*} >= {tnt::arena::%{_arena}%::min}:
				wait a second
				remove 1 from {tnt::arena::%{_arena}%::seconds}	
				if {tnt::arena::%{_arena}%::seconds} = 1 or 2 or 3 or 4 or 5 or 10:
					send "{@prefix}{@starting}" to {tnt::arena::%{_arena}%::ninjas::*}
					{tnt::arena::%{_arena}%::seconds} > 1:
						set {_time} to "{@seconds}"
					else:
						set {_time} to "{@second}"
					send title "{@game-start-title}" with subtitle "{@game-start-subtitle}" to {tnt::arena::%{_arena}%::ninjas::*} with 0 fadein and 0 fadeout for 20
				if {tnt::arena::%{_arena}%::seconds} = 1:
					size of {tnt::arena::%{_arena}%::ninjas::*} >= {tnt::arena::%{_arena}%::min}:
						tnt_start({_arena})
			else:
				tnt_set_arena_status({_arena}, "WAITING")
				set {tnt::arena::%{_arena}%::seconds} to {@lobby-time}
				stop

on sign change:
	line 1 is "[TNT]" or "[TNTTAG]" or "[TNT-TAG]"
	line 2 is "join"
	player have permission "tnt.admin"
	if {tnt::arena::%line 3%::state} is set:
		set {tnt::arena::%line 3%::sign} to location of event-block
		tnt_update_sign(line 3)
	else:
		send "{@prefix}{@not-exist}"	

on right click on sign:
	loop {tnt::arenas::*}:
		if {tnt::arena::%loop-value-1%::sign} is location of event-block:	
			tnt_join(player, loop-value-1)	

function tnt_resetarena(arena: text):
	loop {tnt::arena::%{_arena}%::ninjas::*} and {tnt::arena::%{_arena}%::bad-ninjas::*}:
		loop "arena" and "state" and "has-tnt":
			delete {tnt::player::%loop-value-1%::%loop-value-2%}	
		tnt_clear_player(loop-value-1)
		delete scoreboard of loop-value-1
		set loop-value-1's gamemode to spectator
		push loop-value-1 upwards at speed 0.5
		teleport loop-value-1 to {tnt::lobby}
		set loop-value-1's gamemode to survival
	loop 3 times:
		delete {tnt::arena::%{_arena}%::summary::%loop-number%}		
	delete {tnt::arena::%{_arena}%::ninjas::*} and {tnt::arena::%{_arena}%::bad-ninjas::*} and {tnt::arena::%{_arena}%::exploding-ninjas::*}					
	set {tnt::arena::%{_arena}%::seconds} to {@lobby-time}
	tnt_set_arena_status({_arena}, "WAITING")
	tnt_update_sign({_arena})
							
function tnt_clear_player(p: player):						
	heal {_p}
	extinguish {_p}
	set {_p}'s food to 20	
	clear {_p}'s level
	clear {_p}'s inventory
	set {_p}'s gamemode to survival
	set {_p}'s flight mode to false		
	loop ...{_p}.getActivePotionEffects():
		{_p}.removePotionEffect(loop-value.getType())		
	
function tnt_setSlot(p: player, slot: integer, t: text):
	add "&a", "&b", "&c", "&d", "&e", "&1", "&2", "&3", "&4", "&5", "&6", "&7", "&8", "&9" and "&f" to {_d::*}
	if {_slot} is between 1 and 15: 
		set scoreboard line {_slot} of {_p} to "%{_d::%{_slot}%}%%{_t}%"

function tnt_createBoard(p: player, t: text, size: integer = 15):
	create scoreboard for {_p}
	set scoreboard title of {_p} to "&e&lTNT TAG"
	if {_t} is "TNT-GAME":
		while {tnt::arena::%{tnt::player::%{_p}%::arena}%::status} is "IN-GAME":
			if {tnt::player::%{_p}%::has-tnt} is set:
				set {_target} to "{@target-tag}"
				loop {tnt::arena::%{tnt::player::%{_p}%::arena}%::ninjas::*}:
					if {tnt::player::%loop-value%::has-tnt} is not set:
						set {_closest} to distance between loop-value-1 and {_p}
						distance between loop-value-1 and {_p} < {_closest}:
							set {_closest} to distance between loop-value-1 and {_p}
				send action bar "{@action-bar-tag}" to {_p}
			else:
				set {_target} to "{@target-run}"
				send action bar "{@action-bar-run}" to {_p}
			tnt_setSlot({_p}, 11, "&7%now%")		
			tnt_setSlot({_p}, 10, "")					
			tnt_setSlot({_p}, 9, "&7Round ##%{tnt::arena::%{tnt::player::%{_p}%::arena}%::round}%")					
			tnt_setSlot({_p}, 8, "")				
			tnt_setSlot({_p}, 7, "&eExplosion In &c%{tnt::arena::%{tnt::player::%{_p}%::arena}%::explode}%&cs")	
			tnt_setSlot({_p}, 6, "")				
			tnt_setSlot({_p}, 5, "&fGoal: %{_target}%")					
			tnt_setSlot({_p}, 4, "")		
			tnt_setSlot({_p}, 3, "&fAlive: &a%size of {tnt::arena::%{tnt::player::%{_p}%::arena}%::ninjas::*}% &aPlayers")					
			tnt_setSlot({_p}, 2, "")										
			tnt_setSlot({_p}, 1, "{@website}")							
			wait a second
	if {_t} is "TNT-WAITING":
		while {tnt::arena::%{tnt::player::%{_p}%::arena}%::status} is "WAITING" or "STARTING":	
			tnt_setSlot({_p}, 10, "&7%now%")
			tnt_setSlot({_p}, 9, "")		
			tnt_setSlot({_p}, 8, "&fMap: &a%{tnt::arena::%{tnt::player::%{_p}%::arena}%::map}%")		
			tnt_setSlot({_p}, 7, "&fPlayers: &a%size of {tnt::arena::%{tnt::player::%{_p}%::arena}%::ninjas::*}%/%{tnt::arena::%{tnt::player::%{_p}%::arena}%::max}%")	
			tnt_setSlot({_p}, 6, "")				
			tnt_setSlot({_p}, 5, "&fStarting in: &a%{tnt::arena::%{tnt::player::%{_p}%::arena}%::seconds}%s")				
			tnt_setSlot({_p}, 4, "")						
			tnt_setSlot({_p}, 3, "&fArena: &a%{tnt::player::%{_p}%::arena}%")					
			tnt_setSlot({_p}, 2, "")	
			tnt_setSlot({_p}, 1, "{@website}")						
			wait a second		
				